#2

print('x y z w') - выводит данные на печать

for i in range(1, 100, 10): - цикл с параметрами (от, до, шаг)

if (not(y<=x) or (z<=w) or not(z))==False: # if - условие, not - инверсия, or - или, <= - импликация, == - равенство

elif y = 10000:

else:

#5

num=(bin(i)[2:])- задаётся значение переменной, с пепероводом числа в двоичную СС и срезом лишних символов

num.count('1')%2==0 - подсчёт определённых символов в строке, с проверкой остатка на равенство нулю

int(chislo,2) - перевод числа из указанной СС в десятичную

break - прерывание цикла

#6 from turtle import * - импотируется Черепашка

left(90) - поворот влево 

forward(300) - продвижение вперёд 

right(120) - поворот вправо 

pu() - поднятие пера

goto(x30,y30) - перемещение пера по x и y

dot(5) - постановка точки заданной величины

done() - окно остаётся открытым

#8

from itertools import product - 

n='16 36 56 76 61 63 65 67'

if numb.count('6')==1 and numb[0]!='0':
        for x in nn:
            if x in numb:
                sp.append(x)
        if nos sp:
            k+=1

#12

условие простого числа
if all(num%delit!=0 for delit in range(2,num))
if y*4x//7 in spisok
------------------
s.replace('1', '2')

#14

if (int(f'123{x}5',15)+int(f'1{x}233',15))%14==0:

if f%14 ==0:

#15

if all(((x%2==0)<=(x%3!=0))or(x+A>=100) for x in range(1,1000)):

#16

def f(n):
  if n==!0: return 1
  return f(n-1)+1

#17

работа с парами

with open('17.txt') as f: - импорт элементов из файла

nums[i] - вывод элемента по его индексу

abs() - модуль

if abs(a[i]%10==3 and a[i+1]%10!=3) or abs(a[i]%10!=3 and a[i+1]%10==3):

#23

from itertools import product - импорт метода из библиотеки

return

#24

s.replace('AG', *) - замена одного на другое

for i in s:
  if i=='*'

#25

if s[0]=='1' and s[2] == '2' and s[3] == '1' and s[4] == '3' and s[5] == '9' and s[-1] == '4':

#26

ЕСЛИ(D3+C2>0;0;D3+C2)
СЧЁТЕСЛИ(...)












with open('') as f: - открытие файла
s = f.readline() - считать одну строку файла
s = f.readlines() - считать все строки файла в список
conts.pop(0) - убрать нулевой элемент из списка

s = s.replace('O','A') - заменить O на A

for i in range(начало, конец, шаг): - перебор значений i в диапазоне N
while условие:  - повторение цикла до тех пор, пока выполняется условие
break - прерывание исполнения цикла
exit() - завершение программы

if:       - условие
elif:     - иначе если
else:     - иначе

print() - вывод на экран
ls = [x for x in range(10)] - генератор списка

L.append() - добавить элемент к списку
L.index() - индекс элемента в списке
L.expand() - добавить к списку элементы другого списка
reversed(L) - инвертирует порядок элеметов списка
sorted(L) - сортирует элементы списка по алфавиту, по возрастанию и т.п.
data.sort(reverse=True) - сортирует список в инвертированном порядке
L.index(6) - выводит индекс шестёрки в итерируемом объекте
L.count('6') - считает количество шестёрок в итерируемом объекте
L1 - L[1:10] - срез списка со второго элемента до десятого
s.split(' ') - разделить строку на элементы списка по разделителю (тут - пробелу)

S.add() - добавление элемента в множество

str() - преобразование к строковому типу
int() - преобразование к целочисленному типу
float() - преобразование к числу с плавающей запятой
list() - преобразование к списку
set() - преобразование к множеству
len() - вычислить длину итерируемого объекта
input(пояснение) - ввод
max() - нахождение максимального значения
min() - нахождение минимального значения
sum() - суммирует все элементы
abs() - модуль числа
sqrt() - квадратный корень из числа
round() - округление float числа

from модуль import функции  - импорт функций из доп. модулей

#itertools
b = product("12",repeat=10)    - создаёт список из всех возможных комбинаций 1 и 2 длиной в 10 символов 

#turtle
left(90) - поворот черепашки влево на 90 градусов
right(90) - поворот черепашки вправо на 90 градусов
forward(300) - движение черепашки на 300 вперёд по направлению, куда она смотрит
pu() - поднять перо (перемещения черепашки больше не оставляют следов)
goto(x,y) - перепещение на координаты (x,y)
dot(5) - точка диаметром 5
done() - завершение работы черепашки

prog = ",".join(а)  - объединяет элементы а в строку через разделитель (,)

def f(a,b): - функция с аргументами
  ...
  return R  - возвращаемое функцией значение

lambda x: int(x) - пример безымянной функции

map(function,data) - применяет function ко всем элементам data
filter(function,data) - для фильтрации последовательности элементов, выбирает соответствующие условию
reduce(function,data) - применяет функцию (работающую с двумя числами!) к последовательности, сводя их к одному числу
